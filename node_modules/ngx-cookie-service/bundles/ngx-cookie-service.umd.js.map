{"version":3,"file":"ngx-cookie-service.umd.js","sources":["~/ngx-cookie-service/lib/cookie-service/cookie.service.ts"],"sourcesContent":["// This service is based on the `ng2-cookies` package which sadly is not a service and does\n// not use `DOCUMENT` injection and therefore doesn't work well with AoT production builds.\n// Package: https://github.com/BCJTI/ng2-cookies\n\n\nimport { Injectable, Inject, PLATFORM_ID, InjectionToken } from '@angular/core';\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\nexport class CookieService {\nprivate readonly documentIsAccessible: boolean;\n/**\n * @param {?} document\n * @param {?} platformId\n */\nconstructor(\nprivate document: any,\nprivate platformId: InjectionToken<Object>,\n  ) {\n    this.documentIsAccessible = isPlatformBrowser( this.platformId );\n  }\n/**\n * @param {?} name Cookie name\n * @return {?}\n */\ncheck( name: string ): boolean {\n    if ( !this.documentIsAccessible ) {\n      return false;\n    }\n\n    name = encodeURIComponent( name );\n\n    const /** @type {?} */ regExp: RegExp = this.getCookieRegExp( name );\n    const /** @type {?} */ exists: boolean = regExp.test( this.document.cookie );\n\n    return exists;\n  }\n/**\n * @param {?} name Cookie name\n * @return {?}\n */\nget( name: string ): string {\n    if ( this.documentIsAccessible && this.check( name ) ) {\n      name = encodeURIComponent( name );\n\n      const /** @type {?} */ regExp: RegExp = this.getCookieRegExp( name );\n      const /** @type {?} */ result: RegExpExecArray = regExp.exec( this.document.cookie );\n\n      return decodeURIComponent( result[ 1 ] );\n    } else {\n      return '';\n    }\n  }\n/**\n * @return {?}\n */\ngetAll(): {} {\n    if ( !this.documentIsAccessible ) {\n      return {};\n    }\n\n    const /** @type {?} */ cookies: {} = {};\n    const /** @type {?} */ document: any = this.document;\n\n    if ( document.cookie && document.cookie !== '' ) {\n      const /** @type {?} */ split: Array<string> = document.cookie.split(';');\n\n      for ( let /** @type {?} */ i = 0; i < split.length; i += 1 ) {\n        const /** @type {?} */ currentCookie: Array<string> = split[ i ].split('=');\n\n        currentCookie[ 0 ] = currentCookie[ 0 ].replace( /^ /, '' );\n        cookies[ decodeURIComponent( currentCookie[ 0 ] ) ] = decodeURIComponent( currentCookie[ 1 ] );\n      }\n    }\n\n    return cookies;\n  }\n/**\n * @param {?} name     Cookie name\n * @param {?} value    Cookie value\n * @param {?=} expires  Number of days until the cookies expires or an actual `Date`\n * @param {?=} path     Cookie path\n * @param {?=} domain   Cookie domain\n * @param {?=} secure   Secure flag\n * @param {?=} sameSite OWASP samesite token `Lax` or `Strict`\n * @return {?}\n */\nset(\n    name: string,\n    value: string,\n    expires?: number | Date,\n    path?: string,\n    domain?: string,\n    secure?: boolean,\n    sameSite?: 'Lax' | 'Strict'\n  ): void {\n    if ( !this.documentIsAccessible ) {\n      return;\n    }\n\n    let /** @type {?} */ cookieString: string = encodeURIComponent( name ) + '=' + encodeURIComponent( value ) + ';';\n\n    if ( expires ) {\n      if ( typeof expires === 'number' ) {\n        const /** @type {?} */ dateExpires: Date = new Date( new Date().getTime() + expires * 1000 * 60 * 60 * 24 );\n\n        cookieString += 'expires=' + dateExpires.toUTCString() + ';';\n      } else {\n        cookieString += 'expires=' + expires.toUTCString() + ';';\n      }\n    }\n\n    if ( path ) {\n      cookieString += 'path=' + path + ';';\n    }\n\n    if ( domain ) {\n      cookieString += 'domain=' + domain + ';';\n    }\n\n    if ( secure ) {\n      cookieString += 'secure;';\n    }\n\n    if ( sameSite ) {\n      cookieString += 'sameSite=' + sameSite + ';';\n    }\n\n    this.document.cookie = cookieString;\n  }\n/**\n * @param {?} name   Cookie name\n * @param {?=} path   Cookie path\n * @param {?=} domain Cookie domain\n * @return {?}\n */\ndelete( name: string, path?: string, domain?: string ): void {\n    if ( !this.documentIsAccessible ) {\n      return;\n    }\n\n    this.set( name, '', new Date('Thu, 01 Jan 1970 00:00:01 GMT'), path, domain );\n  }\n/**\n * @param {?=} path   Cookie path\n * @param {?=} domain Cookie domain\n * @return {?}\n */\ndeleteAll( path?: string, domain?: string ): void {\n    if ( !this.documentIsAccessible ) {\n      return;\n    }\n\n    const /** @type {?} */ cookies: any = this.getAll();\n\n    for ( const /** @type {?} */ cookieName in cookies ) {\n      if ( cookies.hasOwnProperty( cookieName ) ) {\n        this.delete( cookieName, path, domain );\n      }\n    }\n  }\n/**\n * @param {?} name Cookie name\n * @return {?}\n */\nprivate getCookieRegExp( name: string ): RegExp {\n    const /** @type {?} */ escapedName: string = name.replace( /([\\[\\]\\{\\}\\(\\)\\|\\=\\;\\+\\?\\,\\.\\*\\^\\$])/ig, '\\\\$1' );\n\n    return new RegExp( '(?:^' + escapedName + '|;\\\\s*' + escapedName + ')=(.*?)(?:;|$)', 'g' );\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n{type: InjectionToken, decorators: [{ type: Inject, args: [PLATFORM_ID, ] }, ]},\n];\n}\n\nfunction CookieService_tsickle_Closure_declarations() {\n/** @type {?} */\nCookieService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCookieService.ctorParameters;\n/** @type {?} */\nCookieService.prototype.documentIsAccessible;\n/** @type {?} */\nCookieService.prototype.document;\n/** @type {?} */\nCookieService.prototype.platformId;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["InjectionToken","Inject","PLATFORM_ID","DOCUMENT","Injectable","isPlatformBrowser"],"mappings":"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"}
