{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://ngx-paypal/lib/services/script.service.ts","ng://ngx-paypal/lib/services/paypal-script.service.ts","ng://ngx-paypal/lib/components/paypal.component.ts","ng://ngx-paypal/lib/ngx-paypal.module.ts"],"names":["__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","ScriptService","zone","this","prototype","registerScript","url","globalVar","onReady","_this","existingGlobalVar","run","scriptElem","document","createElement","id","getElemId","innerHTML","onload","src","async","defer","getElementsByTagName","appendChild","cleanup","getElementById","remove","Injectable","NgZone","PayPalScriptService","scriptService","paypalWindowName","registerPayPalScript","config","getUrlForConfig","destroyPayPalScript","params","name","clientId","currency","commit","extraParams","apply","arguments","length","concat","__spread","getQueryString","queryParams","queryString","queryParam","NgxPaypalComponent","paypalScriptService","cdr","ngZone","scriptLoaded","EventEmitter","ngUnsubscribe","Subject","initializePayPal","Object","defineProperty","content","payPalButtonContainerElem","ngOnChanges","changes","payPalButtonContainerId","generateElementId","isFirstChange","initPayPalScript","payPal","doPayPalCheck","reinitialize","ngOnDestroy","complete","ngAfterViewInit","customInit","undefined","nativeElement","firstChild","removeChild","detectChanges","initPayPal","advanced","extraQueryParams","paypal","Date","valueOf","runOutsideAngular","Buttons","style","createOrder","data","actions","createOrderOnClient","createOrderOnServer","Error","order","create","onApprove","authorizeOnServer","onClientAuthorization","capture","then","details","onError","onCancel","onShippingChange","onClick","onInit","render","Component","args","changeDetection","ChangeDetectionStrategy","OnPush","selector","template","ChangeDetectorRef","Input","Output","ViewChild","static","NgxPayPalModule","NgModule","imports","CommonModule","declarations","exports","providers"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable, NgZone } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class ScriptService {\r\n\r\n    constructor(\r\n        protected zone: NgZone,\r\n    ) {\r\n    }\r\n\r\n    registerScript(url: string, globalVar: string, onReady: (globalVar: any) => void): void {\r\n        const existingGlobalVar = (window as any)[globalVar];\r\n        if (existingGlobalVar) {\r\n            // global variable is present = script was already loaded\r\n            this.zone.run(() => {\r\n                onReady(existingGlobalVar);\r\n            });\r\n            return;\r\n        }\r\n\r\n\r\n        // prepare script elem\r\n        const scriptElem = document.createElement('script');\r\n        scriptElem.id = this.getElemId(globalVar);\r\n        scriptElem.innerHTML = '';\r\n        scriptElem.onload = () => {\r\n            this.zone.run(() => {\r\n                onReady((window as any)[globalVar]);\r\n            });\r\n        };\r\n        scriptElem.src = url;\r\n        scriptElem.async = true;\r\n        scriptElem.defer = true;\r\n\r\n        // add script to header\r\n        document.getElementsByTagName('head')[0].appendChild(scriptElem);\r\n    }\r\n\r\n    cleanup(globalVar: string): void {\r\n        // remove script from DOM\r\n        const scriptElem = document.getElementById(this.getElemId(globalVar));\r\n\r\n        if (scriptElem) {\r\n            scriptElem.remove();\r\n        }\r\n    }\r\n\r\n    private getElemId(globalVar: string): string {\r\n        return `ngx-paypal-script-elem-${globalVar}`;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { IPayPalUrlConfig, IQueryParam } from '../models/paypal-models';\r\nimport { ScriptService } from './script.service';\r\n\r\n@Injectable()\r\nexport class PayPalScriptService {\r\n\r\n    private readonly paypalWindowName = 'paypal';\r\n\r\n\r\n    constructor(\r\n        protected scriptService: ScriptService,\r\n    ) {\r\n    }\r\n\r\n    registerPayPalScript(config: IPayPalUrlConfig, onReady: (payPalApi: any) => void): void {\r\n        this.scriptService.registerScript(this.getUrlForConfig(config), this.paypalWindowName, onReady);\r\n    }\r\n\r\n    destroyPayPalScript(): void {\r\n        this.scriptService.cleanup(this.paypalWindowName);\r\n    }\r\n\r\n    private getUrlForConfig(config: IPayPalUrlConfig): string {\r\n        const params: IQueryParam[] = [\r\n            {\r\n                name: 'client-id',\r\n                value: config.clientId\r\n            }\r\n        ];\r\n\r\n        if (config.currency) {\r\n            params.push({\r\n                name: 'currency',\r\n                value: config.currency\r\n            });\r\n        }\r\n\r\n        if (config.commit) {\r\n            params.push({\r\n                name: 'commit',\r\n                value: config.commit\r\n            });\r\n        }\r\n\r\n        if (config.extraParams) {\r\n            params.push(...config.extraParams);\r\n        }\r\n\r\n        return `https://www.paypal.com/sdk/js${this.getQueryString(params)}`;\r\n    }\r\n\r\n    private getQueryString(queryParams: IQueryParam[]): string {\r\n        let queryString = '';\r\n\r\n        for (let i = 0; i < queryParams.length; i++) {\r\n            const queryParam = queryParams[i];\r\n            if (i === 0) {\r\n                queryString += '?';\r\n            } else {\r\n                queryString += '&';\r\n            }\r\n\r\n            queryString += `${queryParam.name}=${queryParam.value}`;\r\n        }\r\n\r\n        return queryString;\r\n    }\r\n}\r\n","import {\r\n    AfterViewInit,\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    ElementRef,\r\n    EventEmitter,\r\n    Input,\r\n    NgZone,\r\n    OnChanges,\r\n    OnDestroy,\r\n    Output,\r\n    SimpleChanges,\r\n    ViewChild,\r\n} from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\nimport {\r\n    ICancelCallbackData,\r\n    IClientAuthorizeCallbackData,\r\n    ICreateOrderCallbackActions,\r\n    IInitCallbackData,\r\n    IOnApproveCallbackActions,\r\n    IOnApproveCallbackData,\r\n    IOnClickCallbackActions,\r\n    IOnInitCallbackActions,\r\n    IOnShippingChangeActions,\r\n    IOnShippingChangeData,\r\n    IPayPalConfig,\r\n} from '../models/paypal-models';\r\nimport { PayPalScriptService } from '../services/paypal-script.service';\r\n\r\n@Component({\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    selector: 'ngx-paypal',\r\n    template: `\r\n    <div #payPalButtonContainer [id]=\"payPalButtonContainerId\"></div>\r\n    `\r\n})\r\nexport class NgxPaypalComponent implements OnChanges, OnDestroy, AfterViewInit {\r\n\r\n    /**\r\n     * Configuration for paypal.\r\n     */\r\n    @Input() config?: IPayPalConfig;\r\n\r\n    /**\r\n     * If enabled, paypal SDK script will be loaded. Useful if you want to have multiple PayPal components on the same page\r\n     * sharing base configuration. In such a case only a single component may register script.\r\n     */\r\n    @Input() registerScript: boolean = true;\r\n\r\n    /**\r\n     * Emitted when paypal script is loaded\r\n     */\r\n    @Output() scriptLoaded = new EventEmitter<any>();\r\n\r\n    /**\r\n     * Id of the element where PayPal button will be rendered\r\n     */\r\n    public payPalButtonContainerId?: string;\r\n\r\n    private readonly ngUnsubscribe: Subject<void> = new Subject<void>();\r\n\r\n    private payPalButtonContainerElem?: ElementRef;\r\n    @ViewChild('payPalButtonContainer', { static: false }) set payPalButtonContainer(content: ElementRef) {\r\n        this.payPalButtonContainerElem = content;\r\n    }\r\n\r\n    /**\r\n     * Flag that indicates if paypal should be initialized (required for handling script load events and availability of DOM element)\r\n     */\r\n    private initializePayPal: boolean = true;\r\n\r\n    /**\r\n     * Reference to PayPal global API\r\n     */\r\n    private payPal: any;\r\n\r\n    constructor(\r\n        private paypalScriptService: PayPalScriptService,\r\n        private cdr: ChangeDetectorRef,\r\n        private ngZone: NgZone\r\n    ) {\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (!this.payPalButtonContainerId) {\r\n            this.payPalButtonContainerId = this.generateElementId();\r\n        }\r\n\r\n        // first time config setup\r\n        const config = this.config;\r\n\r\n        if (changes.config.isFirstChange()) {\r\n            if (config && this.registerScript) {\r\n                this.initPayPalScript(config, (payPal) => {\r\n                    // store reference to paypal global script\r\n                    this.payPal = payPal;\r\n                    this.doPayPalCheck();\r\n                });\r\n            }\r\n        }\r\n\r\n        // changes to config\r\n        if (!changes.config.isFirstChange()) {\r\n            this.reinitialize(config);\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.paypalScriptService.destroyPayPalScript();\r\n        this.ngUnsubscribe.next();\r\n        this.ngUnsubscribe.complete();\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.doPayPalCheck();\r\n    }\r\n\r\n    customInit(payPal: any): void {\r\n        this.payPal = payPal;\r\n        this.doPayPalCheck();\r\n    }\r\n\r\n    reinitialize(config: IPayPalConfig | undefined): void {\r\n        this.config = config;\r\n        this.payPal = undefined;\r\n        this.paypalScriptService.destroyPayPalScript();\r\n        this.payPalButtonContainerId = this.generateElementId();\r\n        this.initializePayPal = true;\r\n\r\n        if (this.payPalButtonContainerElem) {\r\n            while (this.payPalButtonContainerElem.nativeElement.firstChild) {\r\n                this.payPalButtonContainerElem.nativeElement.removeChild(this.payPalButtonContainerElem.nativeElement.firstChild);\r\n            }\r\n        }\r\n\r\n        this.cdr.detectChanges();\r\n\r\n        if (this.config) {\r\n            if (!this.payPal) {\r\n                this.initPayPalScript(this.config, (payPal) => {\r\n\r\n                    // store reference to paypal global script\r\n                    this.payPal = payPal;\r\n                    this.doPayPalCheck();\r\n                });\r\n            } else {\r\n                this.doPayPalCheck();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private doPayPalCheck(): void {\r\n        if (this.initializePayPal && this.config && this.payPal && this.payPalButtonContainerElem) {\r\n            // make sure that id is also set\r\n            if (this.payPalButtonContainerElem.nativeElement.id) {\r\n                this.initializePayPal = false;\r\n                this.initPayPal(this.config, this.payPal);\r\n            }\r\n        }\r\n    }\r\n\r\n    private initPayPalScript(config: IPayPalConfig, initPayPal: (paypal: any) => void): void {\r\n        this.paypalScriptService.registerPayPalScript({\r\n            clientId: config.clientId,\r\n            commit: config.advanced && config.advanced.commit ? config.advanced.commit : undefined,\r\n            currency: config.currency,\r\n            extraParams: config.advanced && config.advanced.extraQueryParams ? config.advanced.extraQueryParams : []\r\n        }, (paypal) => {\r\n            this.scriptLoaded.next(paypal);\r\n            initPayPal(paypal);\r\n        });\r\n    }\r\n\r\n    private generateElementId(): string {\r\n        return `ngx-captcha-id-${new Date().valueOf()}`;\r\n    }\r\n\r\n    private initPayPal(config: IPayPalConfig, paypal: any): void {\r\n        // Running outside angular zone prevents infinite ngDoCheck lifecycle calls\r\n        this.ngZone.runOutsideAngular(() => {\r\n            // https://developer.paypal.com/docs/checkout/integrate/#2-add-the-paypal-script-to-your-web-page\r\n            paypal.Buttons({\r\n                style: config.style,\r\n                createOrder: (data: any, actions: ICreateOrderCallbackActions) => {\r\n                    return this.ngZone.run(() => {\r\n                        if (config.createOrderOnClient && config.createOrderOnServer) {\r\n                            throw Error(`Both 'createOrderOnClient' and 'createOrderOnServer' are defined.\r\n                        Please choose one or the other.`);\r\n                        }\r\n\r\n                        if (!config.createOrderOnClient && !config.createOrderOnServer) {\r\n                            throw Error(`Neither 'createOrderOnClient' or 'createOrderOnServer' are defined.\r\n                        Please define one of these to create order.`);\r\n                        }\r\n\r\n                        if (config.createOrderOnClient) {\r\n                            return actions.order.create(config.createOrderOnClient(data));\r\n                        }\r\n\r\n                        if (config.createOrderOnServer) {\r\n                            return config.createOrderOnServer(data);\r\n                        }\r\n\r\n                        throw Error(`Invalid state for 'createOrder'.`);\r\n                    });\r\n                },\r\n\r\n                onApprove: (data: IOnApproveCallbackData, actions: IOnApproveCallbackActions) => {\r\n                    return this.ngZone.run(() => {\r\n                        if (config.onApprove) {\r\n                            config.onApprove(data, actions);\r\n                        }\r\n\r\n                        // capture on server\r\n                        if (config.authorizeOnServer) {\r\n                            return config.authorizeOnServer(data, actions);\r\n                        }\r\n\r\n                        // capture on client\r\n                        const onClientAuthorization = config.onClientAuthorization;\r\n                        if (onClientAuthorization) {\r\n                            actions.order.capture().then((details: IClientAuthorizeCallbackData) => {\r\n                                onClientAuthorization(details);\r\n                            });\r\n                            return;\r\n                        }\r\n                    });\r\n                },\r\n\r\n                onError: (error: any) => {\r\n                    this.ngZone.run(() => {\r\n                        if (config.onError) {\r\n                            config.onError(error);\r\n                        }\r\n                    });\r\n                },\r\n\r\n                onCancel: (data: ICancelCallbackData, actions: any) => {\r\n                    this.ngZone.run(() => {\r\n                        if (config.onCancel) {\r\n                            config.onCancel(data, actions);\r\n                        }\r\n                    });\r\n                },\r\n                onShippingChange: (data: IOnShippingChangeData, actions: IOnShippingChangeActions) => {\r\n                    return this.ngZone.run(() => {\r\n                        if (config.onShippingChange) {\r\n                            return config.onShippingChange(data, actions);\r\n                        }\r\n                    });\r\n                },\r\n                onClick: (data: any, actions: IOnClickCallbackActions) => {\r\n                    this.ngZone.run(() => {\r\n                        if (config.onClick) {\r\n                            config.onClick(data, actions);\r\n                        }\r\n                    });\r\n                },\r\n                onInit: (data: IInitCallbackData, actions: IOnInitCallbackActions) => {\r\n                    this.ngZone.run(() => {\r\n                        if (config.onInit) {\r\n                            config.onInit(data, actions);\r\n                        }\r\n                    });\r\n                }\r\n            }).render(`#${this.payPalButtonContainerId}`);\r\n        });\r\n    }\r\n}\r\n\r\n\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { NgxPaypalComponent } from './components/paypal.component';\r\nimport { ScriptService } from './services/script.service';\r\nimport { PayPalScriptService } from './services/paypal-script.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [\r\n    NgxPaypalComponent,\r\n  ],\r\n  exports: [\r\n    NgxPaypalComponent,\r\n  ],\r\n  providers: [\r\n    ScriptService,\r\n    PayPalScriptService\r\n  ]\r\n})\r\nexport class NgxPayPalModule {\r\n}\r\n\r\n\r\n"]}